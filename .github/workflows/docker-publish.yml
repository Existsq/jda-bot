name: Docker

on:
  push:
    branches: [ "main", "release/*" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main", "release/*" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: target
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build Docker image
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: false
          tags: test-image:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push-docker-image:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: target
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Write tags and digest to file
        run: |
          echo "${{ steps.meta.outputs.tags }}" > tags.txt
          echo "${{ steps.build-and-push.outputs.digest }}" > digest.txt
      - name: Upload tags and digest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: image-info
          path: |
            tags.txt
            digest.txt

  sign-docker-image:
    runs-on: ubuntu-latest
    needs: push-docker-image
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Download image info artifacts
        uses: actions/download-artifact@v4
        with:
          name: image-info
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Sign the published Docker image
        run: |
          DIGEST=$(cat digest.txt)
          while read -r tag; do
            cosign sign --yes "${tag}@${DIGEST}"
          done < tags.txt